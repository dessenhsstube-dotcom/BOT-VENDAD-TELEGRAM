
import telebot
from telebot import types
import os
import logging
import time # Necess√°rio para o Polling

# Configura√ß√£o de Logs
# (A Discloud j√° l√™ logs automaticamente, mas isto ajuda na organiza√ß√£o)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --------------------------------------------------------------------------
# VARI√ÅVEIS DE AMBIENTE
# --------------------------------------------------------------------------

# Estas vari√°veis ser√£o lidas do painel da Discloud
BOT_TOKEN = os.getenv("BOT_TOKEN") 
LINK_SUPORTE = os.getenv("LINK_SUPORTE", "https://t.me/seu_username_de_suporte") 
LINK_CANAL_PREVIAS = os.getenv("LINK_CANAL_PREVIAS", "https://t.me/+e_6gNgrikp5lNDkx") 

if not BOT_TOKEN:
    logging.error("‚ùå BOT_TOKEN n√£o est√° definido. O bot n√£o iniciar√°.")
    exit()

# Inicializa√ß√£o do Bot
try:
    bot = telebot.TeleBot(BOT_TOKEN)
    logging.info("Bot de Vendas Simples inicializado com sucesso.")
except Exception as e:
    logging.error(f"Falha na inicializa√ß√£o do Bot: {e}")
    exit()

# --------------------------------------------------------------------------
# HANDLER PRINCIPAL (/start)
# --------------------------------------------------------------------------

@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    """Handler para /start e /help que envia a mensagem de boas-vindas com links."""
    
    # Cria o teclado com bot√µes inline
    markup = types.InlineKeyboardMarkup(row_width=1)
    
    # Bot√£o para o Canal de Pr√©vias
    # O valor do LINK_CANAL_PREVIAS √© lido da vari√°vel de ambiente
    btn_previa = types.InlineKeyboardButton("üî• GRUPO DE PR√âVIAS", url=LINK_CANAL_PREVIAS)
    
    # Bot√£o para o Suporte (onde o pagamento ser√° combinado)
    # O valor do LINK_SUPORTE √© lido da vari√°vel de ambiente
    btn_suporte = types.InlineKeyboardButton("üí≥ COMPRAR / TIRAR D√öVIDAS", url=LINK_SUPORTE)
    
    markup.add(btn_previa, btn_suporte)

    welcome_text = (
        f"üëë *Bem-vindo(a) ao Acesso VIP!*\n\n"
        f"Confira nosso conte√∫do exclusivo no Grupo de Pr√©vias abaixo e fale com o suporte para garantir o seu acesso vital√≠cio.\n\n"
        f"üëá *Fale conosco para realizar o pagamento (PIX ou outro m√©todo):*"
    )
    
    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=markup,
        parse_mode="Markdown", 
    )

# --------------------------------------------------------------------------
# INICIA√á√ÉO DO POLLING
# --------------------------------------------------------------------------

def run_bot():
    """Inicia o bot no modo Polling (ideal para Discloud Free)."""
    try:
        logging.info("Iniciando Bot no modo Polling...")
        # O modo Polling funciona perfeitamente no Discloud Free, pois n√£o exige servidor Web
        # none_stop=True garante que ele tente se reconectar
        bot.polling(none_stop=True, interval=0) 
    except Exception as e:
        logging.error(f"Erro no Polling: {e}. Reiniciando em 5 segundos...")
        time.sleep(5)
        run_bot()

if __name__ == "__main__":
    run_bot()
